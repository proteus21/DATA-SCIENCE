1. zainstaluj biblioteki w wersjach zawartych w pliku libraries.txt (mozesz to zrobic na dwa sposoby):   pip install <biblioteka>, pycharm

>>> import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted(["%s==%s" % (i.key, i.version)
   for i in installed_packages])
print(installed_packages_list)

in Python console :
state show packages

2. sprawdz czy nie ma dostepnych nowszych wersji dla zainstalowanych bibliotek
3. jezeli takowe sa, zaktualizuj je :
pip show <library>, pip --version 
pip install pip-check , instalacja
4. poszukaj informacji o zainstalowanych bibliotekach, dowiedz sie, co dostarczaja do projektu (polecam szczególnie biblioteke ipython)
5. poszukaj w pip biblioteki pylint
6. zainstaluj biblioteke pylint w wersji wyciagnietej z poprzedniego punktu


7. dowiedz sie, co to takiego googlujac w internecie
8. wybierz jeden ze swoich uprzednio stworzonych plików pythonowych i sprawdz jego poprawnosc z wykorzystaniem pylinta (komenda: pylint <sciezka_do_pliku>)


9. jezeli wystepuja jakies pylintowe sugestie, dokonaj poprawek; próbuj do momentu kiedy wynik nie wyniesie 10/10
10. jak sadzisz, gdzie i do czego moze sie przydac taka biblioteka? : do sprawdzania poprawnosci kodu
11. sprawdz jakie biblioteki sa aktualnie zainstalowane na Twoim komputerze; przekieruj wynik do pliku
"pip list"

zipp                            3.4.1
zope.interface                  5.4.0


pip freeze
aiopubsub==2.1.5
aioredis==1.3.1
aiosmtplib==1.1.2

12. jaka jest róznica miedzy poleceniami "pip list", a "pip freeze"? czy mozna z powodzeniem wykorzystac formaty generowane przez obydwie komendy (po uprzednim przekierowaniu do pliku) do zainstalowania paczki zaleznosci (bibliotek) w nowym projekcie? sprawdz
pip freeze > C:\Users\prote\Documents\file.txt

13. odinstaluj uprzednio zainstalowana biblioteke jedi
14. odinstaluj pozostale biblioteki, których nie bedziesz juz potrzebowal(a) -> opcjonalne
pip uninstall library


biblioteki nie uzywane
pip list --outdated




1. install the libraries in the versions included in the libraries.txt file (you can do it in two ways): pip install <library>, pycharm

>>> import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted(["%s==%s" % (i.key, i.version)
   for i in installed_packages])
print(installed_packages_list)

in Python console :
state show packages

2. check if there are no newer versions available for the installed libraries
3. if there are, update them :
pip show <library>, pip --version 
pip install pip-check , install
4. look for information about the installed libraries, find out what they provide to the project (I especially recommend the ipython library)
5. look for the pylint library in pip
6. install the pylint library in the version extracted from the previous point


7. find out what it is by googling on the Internet
8. select one of your previously created python files and check its correctness using pylint (command: pylint <path_to_file>)


9. if there are any pylint suggestions, make corrections; keep trying until the result is not 10/10
10. what do you think, where and for what can such a library be useful? : for code validation
11. check what libraries are currently installed on your computer; redirect the result to the file
"pip list"

zipp 3.4.1
zope.interface 5.4.0


pip freeze
aiopubsub==2.1.5
aioredis==1.3.1
aiosmtplib==1.1.2

12. what is the difference between the commands "pip list" and "pip freeze"? can you successfully use the formats generated by both commands (after redirecting to a file) to install a package of dependencies (libraries) in a new project? check
pip freeze > C:\nDocumentsfile.txt

13. uninstall the previously installed jedi library
14. uninstall the other libraries you will no longer need -> optional
pip uninstall library


unused libraries
pip list --outdated

